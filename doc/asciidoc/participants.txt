Participants
------------
(((ECSA,overview)))
A particpant represents a legal client in an ECSA network.

///////////
[[participant_basic_requirements]]
///////////

Basic functionalities and requirements
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Technology / Architecture
^^^^^^^^^^^^^^^^^^^^^^^^^
(((participant,technology)))
(((participant,architecture)))

- item has to communicate with the ECS as a
  {doctype@hyper:{rest_home_lnk}[REST]:REST footnote\:[REST Homepage see {rest_home_txt}]} client.
- {doctype@hyper:{http_1_1_lnk}[HTTP 1.1]:HTTP 1.1 footnote\:[HTTP 1.1 see {http_1_1_txt}]}
  as transport and application protocol
- provide persistent connection (keep-alive)
- provide SSL/TLS transport layer
- has to use {doctype@hyper:{utf_8_lnk}[UTF-8]:UTF-8 footnote\:[UTF-8 see {utf_8_txt}]}

Authentication
^^^^^^^^^^^^^^
(((participant,authentication)))

- {doctype@hyper:{http_basic_auth_lnk}[HTTP Basic auth]:HTTP Basic auth footnote\:[HTTP Basic auth see {http_basic_auth_txt}]}
- X.509 Certificates (SSL/TLS client authentication)

Authorization
~~~~~~~~~~~~~
(((participant,authorization)))

A client should be able to use a simple "one touch token" authorization through
the ECS `sys/auths` resource. This token could be used to accomplish deligated
authorization for accessing resources on participants of a common ECSA network.
E.g. in redirecting users clicking on course links or in
{doctype@hyper:<<_direct_participant_to_participant_communication,direct communicating of participants>>:direct communicating of participants (see <<_direct_participant_to_participant_communication>>)}.

//////////////////////////////////
ECS REST interface
~~~~~~~~~~~~~~~~~~
//////////////////////////////////

Ressource extensions / Alterations
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
(((participant,ressource extensions)))

To make resource extensions and alteration possible the clients have to
easily permit  

- additional ressources
- extensible data formats
- Postels's Law (robustness principle): _Be conservative in what you send; be liberal in what you accept._
- versioning through request and response header (content negotiation)
 * Accept: application/vnd.my-format.v1+json
 * Accept: application/vnd.my-format.v2+json

Web interfaces
~~~~~~~~~~~~~~
- Interface for ECS configuration data 

///////////////////////////////////
\hypertarget{parcomproc}{}
///////////////////////////////////

Communication procedures / scenarios
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
(((participant,communication)))
In order to take part in an ECSA network a participant has to communicate with
the ECS and other participants in different ways.

Direct participant to participant communication
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
This communication procedure takes place if a participant wants to get resource
data directly from another participant. Normally all participants communicate
only with the ECS and not face to face to each other. For example
this could be necessary if you're sharing a central ECS with other
organizations and you are not allowed to give away sensible data out of the
control of your organization. Of course therefore the communicating
participants have to be in the controlling area of your organization.

Assuming following situation: A Proxy (first participant) wants to send course data
to a LMS (second participant). This message holds sensible data,
which doesn't have to leave the controlling area of the organization by law.
Both participants were controlled by the organization. 

This procedure guarantiee that the appropriate course data will remain on the
proxy until the LMS has successfully fetched the data.

[[fig:direct_participant_to_participant_communication]]


               +---------+                                  
               |auths:ECS|-----------------------------------+   
               +---------+    <--                            |   
                    |         2.3.1:auth2:=delete(auth.hash) |   
                    |                                        |
                    | ^                                      |   
                    | | 2.2:auth:=post()                     |
                    |                                        |   
                    |   2.3:coursedata:=get(auth.hash)       |
                    |    --->                                |
                +------+                     +------------------+
                | :LMS |---------------------|746354389534:Proxy|       
                +------+                     +------------------+
                 |    |                                      |  
  2:ev:=post() | |    | | 2.1:coursedata_url:=get()          |
               v |    | v                                    |  
                 |    |                                      |  
                 |    | | 2.4:delete()                       |  
                 |    | v                                    |  
                 |    |                                      |  
  +---------------+   |                                      |
  |events/fifo:ECS|   |<<local>>                             |
  +---------------+  +--------------------+                  |
                 |   | cc/courses/345:ECS |                  |
                 |   +--------------------+                  |
                 |                                           |
                 |                                           |
               ^ |                                           |
 3:ev2:=post() | |                                           |
                 |                                           |
                 |       +------+                            |
                 +-------|:Proxy|----------------------------+
                         +------+      --->
                             |         3.1:delete()
                             |
                             | | 1:create()
                             | v
                             |
                     +--------------+
                     |cc/courses:ECS|
                     +--------------+

     +-----+
     |     | | 1.1:make_new_create_event(cc/courses/345)
 +----+    | v
 |:ECS|    |
 +----+    | | 2.5[IF no more participant references]:
     |     | v    make_new_no-more-reference_event(cc/courses/345)
     |     |  
     +-----+  

1::
  The proxy creates a new course representation on the ECS, which was addressed
  to the LMS. The proxy doesn't store the sensible data there, instead it
  stores an URL were the real data could be fetched.
1.1::
  The ECS make a new create event on the event queue of the receiving LMS,
  storing the new generated resource URL `cc/courses/345` in it.
2::
  Then the LMS fetches (POST)  this event message from its event resource
  (`sys/events/fifo`) of ECS , which gives it a new or updated coursedata URL
  on ECS. This would be `cc/courses/345` with `Content-Type: text/uri-list`
  (mime type see {doctype@hyper:{mime_type_lnk}[rfc2483]:rfc2483 footnote\:[mime type see {mime_type_txt}]}).
2.1::
  Now the LMS takes this URL and fetches (GET) it from ECS (the LMS only
  fetches the message via a GET, so that the message will still be there).
  Only now the LMS gets the real resource URL to fetch the desired course data
  from the proxy. This url maybe an obscured url like
  `https://.../746354389534`
2.2::
  Next the LMS fetches (POST) a one touch token from the `sys/auths` resource
  of ECS in case the proxy use it for authorization against ECS.
2.3::
  Then the LMS gets (GET) the actual course data from the proxy URL provided by
  the received message in 2.1 . 
2.3.1::
  The proxy returns the coursedata to the LMS if the auth token (auth.hash)
  provided in 2.3 is still available at `sys/auths` resource on ECS.
2.4::
  When it will get back the course resource representation in 2.3
  successfully, it deletes (DELETE) the message `cc/courses/345`
  received in 2.1 on ECS.
2.5::
  If there are no further references on `cc/courses/345` ECS makes a new
  no-more-reference event for `cc/courses/345` addressed to the proxy (original
  sender).
3::
  Proxy is fetching (POST) its events queuer.
3.1::
  If the received event in 3 was a no-more-reference event for
  `cc/courses/345`, Proxy knows, that nobody further references
  `cc/courses/345`. This tells the Proxy, that every addressed participants have
  fetched `cc/courses/345` on ECS and hence all participants has fetched
  `https://.../746354389534`. If this resource was not configured persistent Proxy
  could delete `https://.../746354389534`.



///////////////////////
ifdef::my_use_eps[]
image::diagrams/participant_course_retrieval_indirectly.eps[Indirect LMS coursedata retrieval]
endif::my_use_eps[]
ifdef::my_use_svg[]
image::diagrams/participant_course_retrieval_indirectly.svg[Indirect LMS coursedata retrieval]
endif::my_use_svg[]
ifdef::my_use_png[]
image::diagrams/participant_course_retrieval_indirectly.png[Indirect LMS coursedata retrieval]
endif::my_use_png[]
ifdef::my_use_txt[]

                +---------+                                  
                |auths:ECS|                                  
                +---------+                                  
                     |                                       
                     | ^                                     
                     | | 1.2:auth:=post()               
                     |                                       
                     |   1.3:course:=get(course_url,auth.hash)
                     |    ---> 
                 +------+                 +---------------------+
                 | :LMS |-----------------|course_resource:Proxy|       
                 +------+                 +---------------------+
                   |   |                                     
 1:event:=post() | |   |  | 1.1:course_url:=get()  
                 v |   |  v                                  
                   |   |                                     
                   |   |  | 1.4:delete()                     
                   |   |  v                                  
                   |   |                                     
    +---------------+ +----------------------------+         
    |events/fifo:ECS| | campusconnect/courses/5:ECS|         
    +---------------+ +----------------------------+         

endif::my_use_txt[]
///////////////////////

