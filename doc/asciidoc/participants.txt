Participants
------------
(((ECSA,overview)))
A particpant represents a legal client in an ECSA network.

[[participant_basic_requirements,mylink]]
Basic functionalities and requirements
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Technology / Architecture
^^^^^^^^^^^^^^^^^^^^^^^^^
(((participant,technology)))
(((participant,architecture)))

- item has to communicate with the ECS as a
  http://en.wikipedia.org/wiki/REST[REST] client.
- http://www.w3.org/Protocols/rfc2616/rfc2616.html[HTTP 1.1] as transport and
  application protocol
- provide persistent connection (keep-alive)
- provide SSL/TLS transport layer
- has to use http://en.wikipedia.org/wiki/UTF-8[UTF-8] data encoding

Authentication
^^^^^^^^^^^^^^
(((participant,authentication)))

- http://en.wikipedia.org/wiki/Basic_access_authentication[HTTP Basic auth]
- X.509 Certificates (SSL/TLS client authentication)

Authorization
~~~~~~~~~~~~~
(((participant,authorization)))

A client should be able to use a simple "one touch token" authorization through
the ECS /authtokens ressource. This authorization should be used either in
redirecting users clicking on course links or maybe used in accessing
participants in interconnected ECS networks. 

//////////////////////////////////
ECS REST interface
~~~~~~~~~~~~~~~~~~
//////////////////////////////////

Ressource extensions / Alterations
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
(((participant,ressource extensions)))

To make resource extensions and alteration possible the clients have to
easily permit  

- additional ressources
- extensible data formats
- Postels's Law (robustness principle): _Be conservative in what you send; be liberal in what you accept._
- versioning through request and response header (content negotiation)
 * Accept: application/vnd.my-format.v1+json
 * Accept: application/vnd.my-format.v2+json

Web interfaces
~~~~~~~~~~~~~~
- Interface for ECS configuration data 

///////////////////////////////////
\hypertarget{parcomproc}{}
///////////////////////////////////

Communication procedures / scenarios
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
(((participant,communication)))
In order to take part in an ECSA network a participant has to communicate with
the ECS and other participants in different ways.

Retrieving resource representations indirectly
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
(((participant,retrieving resources indirectly)))
[[heading:participant_coursedata_retrieval_indirectly]]

The <<fig:participant_coursedata_retrieval_indirectly>> shows the communication
procedure how a LMS retrieves a resource representation (coursedata) indirectly
through ECS. Indirect addressing takes place when the ECS returns resource
representations with `Content-Type: text/uri-list` (mime type see 
http://tools.ietf.org/html/rfc2483#section-5[rfc2483]).

1::
  First the LMS fetches (POST)  an event message from its event resource
  (`/sys/events/fifo`) of ECS , which gives it a new or updated course resource
  meta data URL on ECS. Supposing this would be `/campusconnect/course/5` .
1.1::
  Now the LMS takes this URL and fetches (GET) it from ECS (the LMS only
  fetches the message via a GET, so that the message will still be there).
  Only now the LMS gets the real resource URL to fetch the desired course data
  from the proxy. This url maybe an encoded url like
  `https://.../58680c636c8bc4a16e047d758f2e7773118fa141`
1.2::
  Next the LMS fetches (POST) a one touch token from the `/sys/auths` resource
  of ECS in case the proxy use it for authorization against ECS.
1.3::
  Then the LMS gets (GET) the actual course data from the proxy URL provided by
  the received message in 1.1 . 
1.4::
  Until it will get back the course resource representation in 1.3
  successfully, it deletes (DELETE) the message `/campusconnect/course/5`
  received in 1.1 on ECS.

This procedure guarantiee that the appropriate course data will remain on the
proxy until the LMS has successfully fetched the data, because after the
message `/campusconnect/course/5` has been deleted by the LMS the proxy
will be informed by the ECS, so that the real course data  could be deleted.
Of course this information occurs only if all addressed participants has
successfully fetched the message on the proxy and if the
`/campusconnect/courses` resource is not tagged as a postrouted resource. 

.Indirect LMS coursedata retrieval communication procedure.
[[fig:participant_coursedata_retrieval_indirectly]]
ifdef::my_use_eps[]
image::diagrams/participant_course_retrieval_indirectly.eps[Indirect LMS coursedata retrieval]
endif::my_use_eps[]
ifdef::my_use_svg[]
image::diagrams/participant_course_retrieval_indirectly.svg[Indirect LMS coursedata retrieval]
endif::my_use_svg[]
ifdef::my_use_png[]
image::diagrams/participant_course_retrieval_indirectly.png[Indirect LMS coursedata retrieval]
endif::my_use_png[]
ifdef::my_use_txt[]

                +---------+                                  
                |auths:ECS|                                  
                +---------+                                  
                     |                                       
                     | ^                                     
                     | | 1.2:auth_repr:=post()               
                     |                                       
                     |   1.3:course_repr:=get(auth_repr.hash)
                     |    ---> 
                 +------+                 +----------+       
                 | :LMS |-----------------|data:Proxy|       
                 +------+                 +----------+       
                   |   |                                     
 1:event:=post() | |   |  | 1.1:meta_course_resource:=get()  
                 v |   |  v                                  
                   |   |                                     
                   |   |  | 1.4:delete()                     
                   |   |  v                                  
                   |   |                                     
    +---------------+ +----------------------------+         
    |events/fifo:ECS| | campusconnect/courses/5:ECS|         
    +---------------+ +----------------------------+         

endif::my_use_txt[]

